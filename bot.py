import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8285221140:AAEzqIyXzdNlj5dQhmQD2uIWCUG_mooTBrg")
WEB_APP_URL = os.environ.get("WEB_APP_URL", "https://aadesign.store/")
ADMIN_ID = int(os.environ.get("ADMIN_ID", "1240742785"))

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

# –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_MESSAGE = """
üéÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ A&A Design!</b>

–ú—ã —Å–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∂—É—Ä–Ω–∞–ª—ã - –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö.

‚ú® <b>–ß—Ç–æ –Ω–æ–≤–æ–≥–æ:</b>
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π liquid glass –¥–∏–∑–∞–π–Ω
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –∫–Ω–∏–≥–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ä–∞–±–æ—Ç
‚Ä¢ –ö–∞—Ä—Ç–∞ –Ω–∞—à–∏—Ö —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏
‚Ä¢ –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è

<b>–ù–∞—à–∏ —É—Å–ª—É–≥–∏:</b>
üìñ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∂—É—Ä–Ω–∞–ª—ã –æ—Ç 2800‚ÇΩ
‚è± –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 9 –¥–Ω–µ–π
üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏

<b>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∏–∂–µ!</b>
"""

HELP_MESSAGE = """
üìã <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:</b>

<b>üõç –ú–∞–≥–∞–∑–∏–Ω</b>
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∂—É—Ä–Ω–∞–ª–∞
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ó–∞–∫–∞–∑–∞—Ç—å"
‚Ä¢ –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É

<b>üìñ –ö–µ–π—Å—ã</b>
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é 3D –∫–Ω–∏–≥—É
‚Ä¢ –ö–ª–∏–∫–∞–π—Ç–µ –Ω–∞ –∫–Ω–∏–≥—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
‚Ä¢ 18 —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç

<b>‚ùì FAQ</b>
‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ö–∞—Ä—Ç–∞ –Ω–∞—à–∏—Ö —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ—Ä–æ–¥

<b>üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã</b>
‚Ä¢ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
‚Ä¢ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª
‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 10:00-20:00 –ú–°–ö

üí¨ <b>–ú–µ–Ω–µ–¥–∂–µ—Ä:</b> @aadesignmagg
üì¢ <b>–ö–∞–Ω–∞–ª:</b> @aadesignmag
"""

CONTACT_MESSAGE = """
üìû <b>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>

üì± <b>–ú–µ–Ω–µ–¥–∂–µ—Ä:</b> @aadesignmagg
üì¢ <b>–ö–∞–Ω–∞–ª:</b> @aadesignmag

<b>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</b>
üïê 10:00 - 20:00 –ú–°–ö
‚ö° –û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç

<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
üéÄ –ë–æ–ª–µ–µ 100 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
üìÖ –†–∞–±–æ—Ç–∞–µ–º —Å 2023 –≥–æ–¥–∞
üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏

–ü–∏—à–∏—Ç–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è - –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!
"""

ABOUT_MESSAGE = """
üéÄ <b>–û A&A Design</b>

<b>–ö–∞—Å—Ç–æ–º–Ω—ã–π –∂—É—Ä–Ω–∞–ª</b> ‚Äî —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è –ø–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à—É –ª—é–±–æ–≤—å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —á–µ–ª–æ–≤–µ–∫—É.

üíù <b>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å:</b>
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –≤–µ—Ä—Å—Ç–∫–∞
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ—á–∞—Ç—å –Ω–∞ –ø–ª–æ—Ç–Ω–æ–π –±—É–º–∞–≥–µ
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ —Å—Ä–æ–∫–∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏

üé® <b>–ß—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º:</b>
‚Ä¢ –ñ—É—Ä–Ω–∞–ª—ã –¥–ª—è –º–∞–º—ã, –ø–∞–ø—ã, –¥—Ä—É–∑–µ–π
‚Ä¢ Love Story –¥–ª—è –ø–∞—Ä—ã
‚Ä¢ Travel Book –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö
‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏
‚Ä¢ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å—Ç–µ—Ä—ã

üì¶ <b>–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≥–æ—Ä–æ–¥–∞—Ö:</b>
–ú–æ—Å–∫–≤–∞ ‚Ä¢ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ ‚Ä¢ –ö–∞–∑–∞–Ω—å ‚Ä¢ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ ‚Ä¢ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Ä¢ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥ ‚Ä¢ –°–∞–º–∞—Ä–∞ ‚Ä¢ –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É

<i>–° —Ç–∞–∫–∏–º –ø–æ–¥–∞—Ä–∫–æ–º –≤—ã –Ω–∞–¥–æ–ª–≥–æ –æ—Å—Ç–∞–≤–∏—Ç–µ —è—Ä–∫–∏–µ —ç–º–æ—Ü–∏–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –ø–∞–º—è—Ç–∏, –Ω–æ –∏ –Ω–∞ –±—É–º–∞–≥–µ!</i>
"""

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π Web App"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
    keyboard = [
        [InlineKeyboardButton(
            text="üé® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )],
        [
            InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
            InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ],
        [InlineKeyboardButton("üéÄ –û –Ω–∞—Å", callback_data="about")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(
        WELCOME_MESSAGE,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )
    
    user = update.message.from_user
    logger.info(f"User {user.username or user.id} started bot")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    try:
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"üÜï <b>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!</b>\n\n"
                 f"üë§ {user.first_name} {user.last_name or ''}\n"
                 f"üÜî @{user.username or '–±–µ–∑ username'}\n"
                 f"ID: {user.id}",
            parse_mode='HTML'
        )
    except Exception as e:
        logger.error(f"Failed to notify admin: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    keyboard = [[InlineKeyboardButton(
        text="üé® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        web_app=WebAppInfo(url=WEB_APP_URL)
    )]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        HELP_MESSAGE,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

# –ö–æ–º–∞–Ω–¥–∞ /contacts
async def contacts_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    await update.message.reply_text(CONTACT_MESSAGE, parse_mode='HTML')

# –ö–æ–º–∞–Ω–¥–∞ /about
async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏"""
    await update.message.reply_text(ABOUT_MESSAGE, parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "help":
        keyboard = [[InlineKeyboardButton(
            text="üé® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(HELP_MESSAGE, reply_markup=reply_markup, parse_mode='HTML')
        
    elif query.data == "contacts":
        await query.message.reply_text(CONTACT_MESSAGE, parse_mode='HTML')
        
    elif query.data == "about":
        await query.message.reply_text(ABOUT_MESSAGE, parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
async def web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ Web App"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App
    web_app_data = update.message.web_app_data.data
    user = update.message.from_user
    
    try:
        # –ü–∞—Ä—Å–∏–º JSON –¥–∞–Ω–Ω—ã–µ
        data = json.loads(web_app_data)
        action = data.get('action')
        
        logger.info(f"WebApp data from {user.username}: {action}")
        
        # ============================================
        # –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ö–ê–ó–û–í
        # ============================================
        if action == 'order':
            service = data.get('service', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —É—Å–ª—É–≥–∞')
            price = data.get('price', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
            product = data.get('product', 'unknown')
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥
            service_emoji = {
                'size-s': 'üìï',
                'size-m': 'üìó',
                'size-l': 'üìò',
                'size-xl': 'üìô',
                'travel-book': 'üó∫',
                'poster': 'üñº',
                'express': '‚ö°',
                'template': 'üìÑ'
            }
            
            emoji = service_emoji.get(product, 'üìñ')
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
            order_message = f"""
{emoji} <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó!</b>

<b>–ö–ª–∏–µ–Ω—Ç:</b>
üë§ {user.first_name} {user.last_name or ''}
üÜî @{user.username or '–±–µ–∑ username'}
ID: <code>{user.id}</code>

<b>–ó–∞–∫–∞–∑:</b>
üì¶ {service}
üí∞ {price}

<b>–í—Ä–µ–º—è:</b> {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

<i>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.</i>
"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirmation_message = f"""
‚úÖ <b>–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!</b>

{emoji} <b>–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:</b> {service}
üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {price}

–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.

üí° <b>–ü–æ–∫–∞ –∂–¥–µ—Ç–µ:</b>
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ 3D –∫–µ–π—Å—ã –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è
‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∂—É—Ä–Ω–∞–ª–∞
‚Ä¢ –ü–æ–¥—É–º–∞–π—Ç–µ –æ —Ç–µ–º–∞—Ç–∏–∫–µ –∏ —Å—Ç–∏–ª–µ

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ @aadesignmagg
"""
            
            await update.message.reply_text(
                confirmation_message,
                parse_mode='HTML'
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            try:
                await context.bot.send_message(
                    chat_id=ADMIN_ID,
                    text=order_message,
                    parse_mode='HTML'
                )
                logger.info(f"Order notification sent to admin for {service}")
            except Exception as e:
                logger.error(f"Failed to send message to admin: {e}")
        
        # ============================================
        # –û–ë–†–ê–ë–û–¢–ö–ê –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø –° 3D –ö–ù–ò–ì–û–ô
        # ============================================
        elif action == 'book_flip':
            book = data.get('data', {}).get('book', 'unknown')
            flip_action = data.get('data', {}).get('action', 'unknown')
            
            if flip_action == 'open':
                response = f"üìñ <b>–û—Ç–ª–∏—á–Ω–æ!</b>\n\n–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–∏–≥—É —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç.\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∫–ª–∏–∫–∞—Ç—å, —á—Ç–æ–±—ã –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã!"
                
                keyboard = [[InlineKeyboardButton(
                    text="üõí –ó–∞–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–π –∂—É—Ä–Ω–∞–ª",
                    web_app=WebAppInfo(url=WEB_APP_URL + "#shop")
                )]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                
                await update.message.reply_text(
                    response,
                    reply_markup=reply_markup,
                    parse_mode='HTML'
                )
            
            logger.info(f"Book flip: book={book}, action={flip_action} by {user.username}")
        
        # ============================================
        # –û–ë–†–ê–ë–û–¢–ö–ê –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø –° –ö–ê–†–¢–û–ô
        # ============================================
        elif action == 'analytics':
            event = data.get('event', {})
            event_name = event.get('name', 'unknown')
            event_data = event.get('data', {})
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            logger.info(f"Analytics: {event_name} by {user.username} - {event_data}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            important_events = ['map_city_select', 'route_requested', 'address_copied', 'order', 'contact_click']
            
            if event_name in important_events:
                analytics_message = f"""
üìä <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b>

<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{user.username or user.id}
<b>–°–æ–±—ã—Ç–∏–µ:</b> {event_name}
<b>–î–∞–Ω–Ω—ã–µ:</b> {json.dumps(event_data, ensure_ascii=False, indent=2)}
<b>–í—Ä–µ–º—è:</b> {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}
"""
                
                try:
                    await context.bot.send_message(
                        chat_id=ADMIN_ID,
                        text=analytics_message,
                        parse_mode='HTML'
                    )
                except Exception as e:
                    logger.error(f"Failed to send analytics to admin: {e}")
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞—Ä—Ç—ã
            if event_name == 'map_city_select':
                city = event_data.get('city', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥')
                await update.message.reply_text(
                    f"üìç –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥–æ—Ä–æ–¥–µ: <b>{city}</b>\n\n"
                    f"–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!",
                    parse_mode='HTML'
                )
            
            elif event_name == 'route_requested':
                city = event_data.get('city', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥')
                await update.message.reply_text(
                    f"üó∫ –ú–∞—Ä—à—Ä—É—Ç –¥–æ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≥–æ—Ä–æ–¥–µ <b>{city}</b> –æ—Ç–∫—Ä—ã—Ç –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö!",
                    parse_mode='HTML'
                )
            
            elif event_name == 'address_copied':
                await update.message.reply_text(
                    f"‚úÖ –ê–¥—Ä–µ—Å —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!"
                )
        
        # ============================================
        # –û–ë–†–ê–ë–û–¢–ö–ê –ö–õ–ò–ö–û–í –ü–û –ö–û–ù–¢–ê–ö–¢–ê–ú
        # ============================================
        elif action == 'contact_click':
            platform = data.get('platform', 'unknown')
            url = data.get('url', '')
            
            platform_names = {
                'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
                'channel': '–ö–∞–Ω–∞–ª'
            }
            
            platform_name = platform_names.get(platform, platform)
            
            logger.info(f"User {user.username} clicked on {platform}: {url}")
            
            # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            thanks_messages = {
                'manager': "üì± –°–ø–∞—Å–∏–±–æ! –í—ã –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç!",
                'channel': "üì¢ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏!"
            }
            
            if platform in thanks_messages:
                await update.message.reply_text(thanks_messages[platform])
            
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            try:
                await context.bot.send_message(
                    chat_id=ADMIN_ID,
                    text=f"üëÜ <b>–ö–ª–∏–∫ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É</b>\n\n"
                         f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or user.id}\n"
                         f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform_name}\n"
                         f"–í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}",
                    parse_mode='HTML'
                )
            except Exception as e:
                logger.error(f"Failed to notify admin: {e}")
        
        # ============================================
        # –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–ò
        # ============================================
        elif action == 'navigation':
            to_section = data.get('to', 'unknown')
            logger.info(f"User {user.username} navigated to: {to_section}")
        
        # ============================================
        # –ù–ï–ò–ó–í–ï–°–¢–ù–û–ï –î–ï–ô–°–¢–í–ò–ï
        # ============================================
        else:
            logger.warning(f"Unknown action: {action} from {user.username}")
        
    except json.JSONDecodeError:
        logger.error(f"Failed to parse WebApp data: {web_app_data}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
    except Exception as e:
        logger.error(f"Error processing WebApp data: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    
    text = update.message.text.lower()
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    order_keywords = ["–∑–∞–∫–∞–∑", "–∫—É–ø–∏—Ç—å", "—Ü–µ–Ω–∞", "–∂—É—Ä–Ω–∞–ª", "–∫–Ω–∏–≥–∞", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "—Å–∫–æ–ª—å–∫–æ"]
    cases_keywords = ["–∫–µ–π—Å", "–ø—Ä–∏–º–µ—Ä", "—Ä–∞–±–æ—Ç—ã", "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ", "–æ–±—Ä–∞–∑–µ—Ü"]
    contact_keywords = ["–∫–æ–Ω—Ç–∞–∫—Ç", "—Å–≤—è–∑—å", "–º–µ–Ω–µ–¥–∂–µ—Ä", "—Ç–µ–ª–µ—Ñ–æ–Ω", "–Ω–∞–ø–∏—Å–∞—Ç—å"]
    help_keywords = ["–ø–æ–º–æ—â—å", "–∫–∞–∫", "–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "—á—Ç–æ", "–≥–¥–µ"]
    map_keywords = ["—Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—è", "–∞–¥—Ä–µ—Å", "–∫–∞—Ä—Ç–∞", "–≥–æ—Ä–æ–¥", "–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è"]
    
    if any(word in text for word in order_keywords):
        # –ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –ø—Ä–æ –∑–∞–∫–∞–∑
        keyboard = [[InlineKeyboardButton(
            text="üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
            web_app=WebAppInfo(url=WEB_APP_URL + "#shop")
        )]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üõç <b>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</b>\n\n"
            "–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ä–∞–∑–º–µ—Ä –∂—É—Ä–Ω–∞–ª–∞:\n\n"
            "üìï –†–∞–∑–º–µ—Ä S - –æ—Ç 3800‚ÇΩ\n"
            "üìó –†–∞–∑–º–µ—Ä M - –æ—Ç 4800‚ÇΩ\n"
            "üìò –†–∞–∑–º–µ—Ä L - –æ—Ç 5800‚ÇΩ\n"
            "üìô –†–∞–∑–º–µ—Ä XL - –æ—Ç 7800‚ÇΩ\n"
            "üó∫ Travel Book - 3800‚ÇΩ\n"
            "üñº –ü–æ—Å—Ç–µ—Ä - 2000‚ÇΩ\n"
            "‚ö° Express - 9800‚ÇΩ",
            reply_markup=reply_markup,
            parse_mode='HTML'
        )
    
    elif any(word in text for word in cases_keywords):
        # –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç—Å—è –∫–µ–π—Å–∞–º–∏
        keyboard = [[InlineKeyboardButton(
            text="üìñ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å 3D –∫–Ω–∏–≥—É",
            web_app=WebAppInfo(url=WEB_APP_URL + "#cases")
        )]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üìñ <b>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –∫–Ω–∏–≥–∞</b>\n\n"
            "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞—à—É –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–∏–≥—É —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ä–∞–±–æ—Ç!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–∏–≥—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã. "
            "18 —Å—Ç—Ä–∞–Ω–∏—Ü —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –Ω–∞—à–∏—Ö –∂—É—Ä–Ω–∞–ª–æ–≤!",
            reply_markup=reply_markup,
            parse_mode='HTML'
        )
    
    elif any(word in text for word in map_keywords):
        # –ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –ø—Ä–æ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏
        keyboard = [[InlineKeyboardButton(
            text="üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–π",
            web_app=WebAppInfo(url=WEB_APP_URL + "#faq")
        )]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üó∫ <b>–ù–∞—à–∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏</b>\n\n"
            "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –≤ 8 –≥–æ—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏:\n\n"
            "üìç –ú–æ—Å–∫–≤–∞\n"
            "üìç –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥\n"
            "üìç –ö–∞–∑–∞–Ω—å\n"
            "üìç –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥\n"
            "üìç –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫\n"
            "üìç –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥\n"
            "üìç –°–∞–º–∞—Ä–∞\n"
            "üìç –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É\n\n"
            "–û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞—Ä—Ç—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç!",
            reply_markup=reply_markup,
            parse_mode='HTML'
        )
    
    elif any(word in text for word in contact_keywords):
        await update.message.reply_text(CONTACT_MESSAGE, parse_mode='HTML')
    
    elif any(word in text for word in help_keywords):
        keyboard = [[InlineKeyboardButton(
            text="üé® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(HELP_MESSAGE, reply_markup=reply_markup, parse_mode='HTML')
    
    else:
        # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
        keyboard = [
            [InlineKeyboardButton(
                text="üé® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                web_app=WebAppInfo(url=WEB_APP_URL)
            )],
            [
                InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
                InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–∫–∞–∑–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π –∂—É—Ä–Ω–∞–ª.\n\n"
            "<b>–ß—Ç–æ —è –º–æ–≥—É:</b>\n"
            "üõç –ü–æ–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω –∏ —Ü–µ–Ω—ã\n"
            "üìñ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç (3D –∫–Ω–∏–≥–∞)\n"
            "üó∫ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–π\n"
            "üìû –î–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!",
            reply_markup=reply_markup,
            parse_mode='HTML'
        )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∞–¥–º–∏–Ω–∞)
async def get_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.message.from_user.id
    username = update.message.from_user.username
    await update.message.reply_text(
        f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n\n"
        f"üÜî ID: <code>{user_id}</code>\n"
        f"üë§ Username: @{username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}",
        parse_mode='HTML'
    )

# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    if update.message.from_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    stats_message = """
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ A&A Design Bot v3.0</b>

üé® <b>–î–∏–∑–∞–π–Ω:</b>
‚úÖ Modern Liquid Glass
‚úÖ Bottom Navigation
‚úÖ Floating Logo

üì± <b>–§—É–Ω–∫—Ü–∏–∏:</b>
‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –∫–Ω–∏–≥–∞ (18 —Å—Ç—Ä–∞–Ω–∏—Ü)
‚úÖ –ö–∞—Ä—Ç–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–π (8 –≥–æ—Ä–æ–¥–æ–≤)
‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤
‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
‚úÖ Haptic –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å

üó∫ <b>–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏:</b>
–ú–æ—Å–∫–≤–∞ ‚Ä¢ –°–ü–± ‚Ä¢ –ö–∞–∑–∞–Ω—å ‚Ä¢ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Ä¢ –ù.–ù–æ–≤–≥–æ—Ä–æ–¥ ‚Ä¢ –°–∞–º–∞—Ä–∞ ‚Ä¢ –†–æ—Å—Ç–æ–≤

üõç <b>–£—Å–ª—É–≥–∏:</b>
‚Ä¢ –†–∞–∑–º–µ—Ä—ã S/M/L/XL (3800-7800‚ÇΩ)
‚Ä¢ Travel Book (3800‚ÇΩ)
‚Ä¢ –ü–æ—Å—Ç–µ—Ä (2000‚ÇΩ)
‚Ä¢ Express (9800‚ÇΩ)
‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã (2800‚ÇΩ)

<b>–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b> {url}
<b>–í–µ—Ä—Å–∏—è:</b> 3.0 - Liquid Glass Edition
"""
    
    await update.message.reply_text(
        stats_message.format(url=WEB_APP_URL),
        parse_mode='HTML'
    )

# –ö–æ–º–∞–Ω–¥–∞ broadcast (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
async def broadcast_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    if update.message.from_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    await update.message.reply_text(
        "üì¢ <b>–§—É–Ω–∫—Ü–∏—è broadcast</b>\n\n"
        "–î–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
        "–í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.",
        parse_mode='HTML'
    )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info(f"üöÄ Starting A&A Design Bot v3.0 - Liquid Glass Edition")
    logger.info(f"üîë Bot token: {BOT_TOKEN[:10]}...")
    logger.info(f"üåê Web App URL: {WEB_APP_URL}")
    logger.info(f"üë§ Admin ID: {ADMIN_ID}")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("contacts", contacts_command))
    application.add_handler(CommandHandler("about", about_command))
    application.add_handler(CommandHandler("id", get_id))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("broadcast", broadcast_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button_callback))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("üéÄ A&A Design Bot is starting...")
    print("=" * 60)
    print("üéÄ A&A Design Bot v3.0 - Liquid Glass Edition")
    print("=" * 60)
    print(f"üì± Web App: {WEB_APP_URL}")
    print("üìñ Features:")
    print("  ‚Ä¢ Modern Liquid Glass Design")
    print("  ‚Ä¢ Bottom Navigation")
    print("  ‚Ä¢ 3D Interactive Book (18 pages)")
    print("  ‚Ä¢ Yandex Maps (8 cities)")
    print("  ‚Ä¢ Order System")
    print("  ‚Ä¢ Analytics")
    print("=" * 60)
    print("‚úÖ Bot is running!")
    print("Press Ctrl+C to stop")
    print("=" * 60)
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()